*z80-docs.txt* Plugin Docs for Z80 Assembly Programming
*z80-docs* *vim-z80-docs*

AUTHOR
================================================================================
    Eric Nantel


TABLE OF CONTENTS
================================================================================

 1. Registers ......................................... |z80-registers|
  1.1. General-Purpose Registers ...................... |z80-general-registers|
  1.2. Special-Purpose Registers ...................... |z80-special-registers|
 2. Instructions ...................................... |z80-instructions|


REGISTERS
================================================================================
							*z80-registers*

GENERAL-PURPOSE REGISTERS
================================================================================
							*z80-general-registers*

     ------- ------- ------- -------
    |	A   |	F   |	A'  |	F'  |
     ------- ------- ------- -------
    |	B   |	C   |	B'  |	C'  |
     ------- ------- ------- ------
    |	D   |	E   |	D'  |	E'  |
     ------- ------- -------  ------
    |	H   |	L   |	H'  |	L'  |
     ------- ------- ------- -------
Composed of 16 individual 8-bit registers separated in 2 sets: main and
alternate register set. Registers can be use individually as 8-bit registers 
or in pairs of 16-bit registers as follow:
AF, BC, DE, HL, AF', BC', DE', HL'

Register A is known as the accumulator register. It can hold results of 8-bit
arithmetic or logical operations.

Register F is known as the flag register. It can indicates conditions such as
a carry or zero flag from a previous arithmetic or logical operation done with
the accumulator.

SPECIAL-PURPOSE REGISTERS
================================================================================
							*z80-special-registers*

     -------  ------
    |	I   |	R   |
     -------  ------
    |	    IX	    |
     ---------------
    |	    IY	    |
     ---------------
    |	    SP	    |
     ---------------
    |	    PC	    |
     ---------------
Composed of 2 individual 8-bit registers and 4 individual 16-bit registers.

Register I is the interrupt page address register.

Register R is the memory refresh register.

Register IX and IY are index registers. They can hold a 16-bit base address.

Register SP is the stack pointer register. It holds the 16-bit address of the
current top of stack.

Register PC is the program counter register. It holds the 16-bit address of
the current instruction being fetched.

INSTRUCTIONS
================================================================================
							*z80-instructions*


INSTRUCTION ADC
================================================================================
							*z80-instruction-adc*
ADC A, (HL)
ADC A, (IX + o)
ADC A, (IY + o)
ADC A, n
ADC A, r
ADC A, IXp
ADC A, IYq
ADC HL, BC
ADC HL, DE
ADC HL, HL
ADC HL, SP


INSTRUCTION ADD
================================================================================
							*z80-instruction-add*
ADD A, (HL)
ADD A, (IX + o)
ADD A, (IY + o)
ADD A, n
ADD A, r
ADD A, IXp
ADD A, IYq
ADD HL, BC
ADD HL, DE
ADD HL, HL
ADD HL, SP
ADD IX, BC
ADD IX, DE
ADD IX, IX
ADD IX, SP
ADD IY, BC
ADD IY, DE
ADD IY, IY
ADD IY, SP


INSTRUCTION AND
================================================================================
							*z80-instruction-and*
AND (HL)
AND (IX + o)
AND (IY + o)
AND n
AND r
AND IXp
AND IYq


INSTRUCTION BIT
================================================================================
							*z80-instruction-bit*
BIT b, (HL)
BIT b, (IX + o)
BIT b, (IY + o)
BIT b, r


INSTRUCTION CALL
================================================================================
							*z80-instruction-call*
CALL nn
CALL C, nn
CALL M, nn
CALL NC, nn
CALL NZ, nn
CALL P, nn
CALL PE, nn
CALL PO, nn
CALL Z, nn


INSTRUCTION CCF
================================================================================
							*z80-instruction-ccf*
CCF


INSTRUCTION CP
================================================================================
							*z80-instruction-cp*
CP (HL)
CP (IX + o)
CP (IY + o)
CP n
CP r
CP IXp
CP IYq


INSTRUCTION CPD
================================================================================
							*z80-instruction-cpd*
CPD


INSTRUCTION CPDR
================================================================================
							*z80-instruction-cpdr*
CPDR


INSTRUCTION CPI
================================================================================
							*z80-instruction-cpi*
CPI


INSTRUCTION CPIR
================================================================================
							*z80-instruction-cpir*
CPIR


INSTRUCTION CPL
================================================================================
							*z80-instruction-cpl*
CPL


INSTRUCTION DAA
================================================================================
							*z80-instruction-daa*
DAA


INSTRUCTION DEC
================================================================================
							*z80-instruction-dec*
DEC (HL)
DEC (IX + o)
DEC (IY + o)
DEC A
DEC B
DEC BC
DEC C
DEC D
DEC DE
DEC E
DEC H
DEC HL
DEC IX
DEC IY
DEC IXp
DEC IYq
DEC L
DEC SP


INSTRUCTION DI
================================================================================
							*z80-instruction-di*
DI


INSTRUCTION DJNZ
================================================================================
							*z80-instruction-djnz*
DJNZ o


INSTRUCTION EI
================================================================================
							*z80-instruction-ei*
EI


INSTRUCTION EX
================================================================================
							*z80-instruction-ex*
EX (SP), HL
EX (SP), IX
EX (SP), IY
EX AF, AF'
EX DE, HL


INSTRUCTION EXX
================================================================================
							*z80-instruction-exx*
EXX


INSTRUCTION HALT
================================================================================
							*z80-instruction-halt*
HALT


INSTRUCTION IM
================================================================================
							*z80-instruction-im*
IM 0
IM 1
IM 2


INSTRUCTION IN
================================================================================
							*z80-instruction-in*
IN A, (C)
IN A, (n)
IN B, (C)
IN C, (C)
IN D, (C)
IN E, (C)
IN H, (C)
IN L, (C)
IN F, (C)


INSTRUCTION INC
================================================================================
							*z80-instruction-inc*
INC (HL)
INC (IX + o)
INC (IY + o)
INC A
INC B
INC BC
INC C
INC D
INC DE
INC E
INC H
INC HL
INC IX
INC IY
INC IXp
INC IYq
INC L
INC SP


INSTRUCTION IND
================================================================================
							*z80-instruction-ind*
IND


INSTRUCTION INDR
================================================================================
							*z80-instruction-indr*
INDR


INSTRUCTION INI
================================================================================
							*z80-instruction-ini*
INI


INSTRUCTION INIR
================================================================================
							*z80-instruction-inir*
INIR


INSTRUCTION JP
================================================================================
							*z80-instruction-jp*
JP nn
JP (HL)
JP (IX)
JP (IY)
JP C, nn
JP M, nn
JP NC, nn
JP NZ, nn
JP P, nn
JP PE, nn
JP PO, nn
JP Z, nn


INSTRUCTION JR
================================================================================
							*z80-instruction-jr*
JR o
JR C, o
JR NC, o
JR NZ, o
JR Z, o


INSTRUCTION LD
================================================================================
							*z80-instruction-ld*
LD (BC), A
LD (DE), A
LD (HL), n
LD (HL), r
LD (IX + o), n
LD (IX + o), r
LD (IY + o), n
LD (IY + o), r
LD (nn), A
LD (nn), BC
LD (nn), DE
LD (nn), HL
LD (nn), IX
LD (nn), IY
LD (nn), SP
LD A, (BC)
LD A, (DE)
LD A, (HL)
LD A, (IX + o)
LD A, (IY + o)
LD A, (nn)
LD A, n
LD A, r
LD A, IXp
LD A, IYq
LD A, I
LD A, R
LD B, (HL)
LD B, (IX + o)
LD B, (IY + o)
LD B, n
LD B, r
LD B, IXp
LD B, IYq
LD BC, (nn)
LD BC, nn
LD C, (HL)
LD C, (IX + o)
LD C, (IY + o)
LD C, n
LD C, r
LD C, IXp
LD C, IYq
LD D, (HL)
LD D, (IX + o)
LD D, (IY + o)
LD D, n
LD D, r
LD D, IXp
LD D, IYq
LD DE, (nn)
LD DE, nn
LD E, (HL)
LD E, (IX + o)
LD E, (IY + o)
LD E, n
LD E, r
LD E, IXp
LD E, IYq
LD H, (HL)
LD H, (IX + o)
LD H, (IY + o)
LD H, n
LD H, r
LD HL, (nn)
LD HL, nn
LD I, A
LD IX, (nn)
LD IX, nn
LD IXh, n
LD IXh, p
LD IXl, n
LD IXl, q
LD IY, (nn)
LD IY, nn
LD IYh, n
LD IYh, p
LD IYl, n
LD IYl, q
LD L, (HL)
LD L, (IX + o)
LD L, (IY + o)
LD L, n
LD L, r
LD R, A
LD SP, (nn)
LD SP, HL
LD SP, IX
LD SP, IY
LD SP, nn


INSTRUCTION LDD
================================================================================
							*z80-instruction-ldd*
LDD


INSTRUCTION LDDR
================================================================================
							*z80-instruction-lddr*
LDDR


INSTRUCTION LDI
================================================================================
							*z80-instruction-ldi*
LDI


INSTRUCTION LDIR
================================================================================
							*z80-instruction-ldir*
LDIR


INSTRUCTION MULUB
================================================================================
							*z80-instruction-mulub*
MULUB A, r


INSTRUCTION MULUW
================================================================================
							*z80-instruction-muluw*
MULUW HL, BC
MULUW HL, SP


INSTRUCTION NEG
================================================================================
							*z80-instruction-neg*
NEG


INSTRUCTION NOP
================================================================================
							*z80-instruction-nop*
NOP


INSTRUCTION OP
================================================================================
							*z80-instruction-or*
OR (HL)
OR (IX + o)
OR (IY + o)
OR n
OR r
OR IXp
OR IYq


INSTRUCTION OTDR
================================================================================
							*z80-instruction-otdr*
OTDR


INSTRUCTION OTIR
================================================================================
							*z80-instruction-otir*
OTIR


INSTRUCTION OUT
================================================================================
							*z80-instruction-out*
OUT (C), A
OUT (C), B
OUT (C), C
OUT (C), D
OUT (C), E
OUT (C), H
OUT (C), L
OUT (n), A


INSTRUCTION OUTD
================================================================================
							*z80-instruction-outd*
OUTD


INSTRUCTION OUTI
================================================================================
							*z80-instruction-outi*
OUTI


INSTRUCTION POP
================================================================================
							*z80-instruction-pop*
POP AF
POP BC
POP DE
POP HL
POP IX
POP IY


INSTRUCTION PUSH
================================================================================
							*z80-instruction-push*
PUSH AF
PUSH BC
PUSH DE
PUSH HL
PUSH IX
PUSH IY


INSTRUCTION RES
================================================================================
							*z80-instruction-res*
RES b, (HL)
RES b, (IX + o)
RES b, (IY + o)
RES b, r


INSTRUCTION RET
================================================================================
							*z80-instruction-ret*
RET
RET C
RET M
RET NC
RET NZ
RET P
RET PE
RET PO
RET Z


INSTRUCTION RETI
================================================================================
							*z80-instruction-reti*
RETI


INSTRUCTION RETN
================================================================================
							*z80-instruction-retn*
RETN


INSTRUCTION RL
================================================================================
							*z80-instruction-rl*
RL (HL)
RL (IX + o)
RL (IY + o)
RL r


INSTRUCTION RLA
================================================================================
							*z80-instruction-rla*
RLA


INSTRUCTION RLC
================================================================================
							*z80-instruction-rlc*
RLC (HL)
RLC (IX + o)
RLC (IY + o)
RLC r


INSTRUCTION RLCA
================================================================================
							*z80-instruction-rlca*
RLCA


INSTRUCTION RLD
================================================================================
							*z80-instruction-rld*
RLD


INSTRUCTION RR
================================================================================
							*z80-instruction-rr*
RR (HL)
RR (IX + o)
RR (IY + o)
RR r


INSTRUCTION RRA
================================================================================
							*z80-instruction-rra*
RRA


INSTRUCTION RRC
================================================================================
							*z80-instruction-rrc*
RRC (HL)
RRC (IX + o)
RRC (IY + o)
RRC r


INSTRUCTION RRCA
================================================================================
							*z80-instruction-rrca*
RRCA


INSTRUCTION RRD
================================================================================
							*z80-instruction-rrd*
RRD


INSTRUCTION RST
================================================================================
							*z80-instruction-rst*
RST 0
RST 8H
RST 10H
RST 18H
RST 20H
RST 28H
RST 30H
RST 38H


INSTRUCTION SBC
================================================================================
							*z80-instruction-sbc*
SBC A, (HL)
SBC A, (IX + o)
SBC A, (IY + o)
SBC A, n
SBC A, r
SBC A, IXp
SBC A, IYq
SBC HL, BC
SBC HL, DE
SBC HL, HL
SBC HL, SP


INSTRUCTION SCF
================================================================================
							*z80-instruction-scf*
SCF


INSTRUCTION SET
================================================================================
							*z80-instruction-set*
SET b, (HL)
SET b, (IX + o)
SET b, (IY + o)
SET b, r


INSTRUCTION SLA
================================================================================
							*z80-instruction-sla*
SLA (HL)
SLA (IX + o)
SLA (IY + o)
SLA r


INSTRUCTION SRA
================================================================================
							*z80-instruction-sra*
SRA (HL)
SRA (IX + o)
SRA (IY + o)
SRA r


INSTRUCTION SRL
================================================================================
							*z80-instruction-srl*
SRL (HL)
SRL (IX + o)
SRL (IY + o)
SRL r


INSTRUCTION SUB
================================================================================
							*z80-instruction-sub*
SUB (HL)
SUB (IX + o)
SUB (IY + o)
SUB n
SUB r
SUB IXp
SUB IYq


INSTRUCTION XOR
================================================================================
							*z80-instruction-xor*
XOR (HL)
XOR (IX + o)
XOR (IY + o)
XOR n
XOR r
XOR IXp
XOR IYq

vim:tw=80:ts=8:ft=help:norl:
